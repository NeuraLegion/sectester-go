// Code generated by mockery v2.20.0. DO NOT EDIT.

package bus

import mock "github.com/stretchr/testify/mock"

// MockRetriable is an autogenerated mock type for the Retriable type
type MockRetriable struct {
	mock.Mock
}

type MockRetriable_Expecter struct {
	mock *mock.Mock
}

func (_m *MockRetriable) EXPECT() *MockRetriable_Expecter {
	return &MockRetriable_Expecter{mock: &_m.Mock}
}

// Execute provides a mock function with given fields:
func (_m *MockRetriable) Execute() (interface{}, error) {
	ret := _m.Called()

	var r0 interface{}
	var r1 error
	if rf, ok := ret.Get(0).(func() (interface{}, error)); ok {
		return rf()
	}
	if rf, ok := ret.Get(0).(func() interface{}); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(interface{})
		}
	}

	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// MockRetriable_Execute_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Execute'
type MockRetriable_Execute_Call struct {
	*mock.Call
}

// Execute is a helper method to define mock.On call
func (_e *MockRetriable_Expecter) Execute() *MockRetriable_Execute_Call {
	return &MockRetriable_Execute_Call{Call: _e.mock.On("Execute")}
}

func (_c *MockRetriable_Execute_Call) Run(run func()) *MockRetriable_Execute_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockRetriable_Execute_Call) Return(_a0 interface{}, _a1 error) *MockRetriable_Execute_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *MockRetriable_Execute_Call) RunAndReturn(run func() (interface{}, error)) *MockRetriable_Execute_Call {
	_c.Call.Return(run)
	return _c
}

type mockConstructorTestingTNewMockRetriable interface {
	mock.TestingT
	Cleanup(func())
}

// NewMockRetriable creates a new instance of MockRetriable. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewMockRetriable(t mockConstructorTestingTNewMockRetriable) *MockRetriable {
	mock := &MockRetriable{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
