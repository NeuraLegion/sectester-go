// Code generated by mockery v2.20.0. DO NOT EDIT.

package core

import mock "github.com/stretchr/testify/mock"

// MockConfigurationOption is an autogenerated mock type for the ConfigurationOption type
type MockConfigurationOption struct {
	mock.Mock
}

type MockConfigurationOption_Expecter struct {
	mock *mock.Mock
}

func (_m *MockConfigurationOption) EXPECT() *MockConfigurationOption_Expecter {
	return &MockConfigurationOption_Expecter{mock: &_m.Mock}
}

// Execute provides a mock function with given fields: f
func (_m *MockConfigurationOption) Execute(f *Configuration) {
	_m.Called(f)
}

// MockConfigurationOption_Execute_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Execute'
type MockConfigurationOption_Execute_Call struct {
	*mock.Call
}

// Execute is a helper method to define mock.On call
//   - f *Configuration
func (_e *MockConfigurationOption_Expecter) Execute(f interface{}) *MockConfigurationOption_Execute_Call {
	return &MockConfigurationOption_Execute_Call{Call: _e.mock.On("Execute", f)}
}

func (_c *MockConfigurationOption_Execute_Call) Run(run func(f *Configuration)) *MockConfigurationOption_Execute_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(*Configuration))
	})
	return _c
}

func (_c *MockConfigurationOption_Execute_Call) Return() *MockConfigurationOption_Execute_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockConfigurationOption_Execute_Call) RunAndReturn(run func(*Configuration)) *MockConfigurationOption_Execute_Call {
	_c.Call.Return(run)
	return _c
}

type mockConstructorTestingTNewMockConfigurationOption interface {
	mock.TestingT
	Cleanup(func())
}

// NewMockConfigurationOption creates a new instance of MockConfigurationOption. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewMockConfigurationOption(t mockConstructorTestingTNewMockConfigurationOption) *MockConfigurationOption {
	mock := &MockConfigurationOption{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
